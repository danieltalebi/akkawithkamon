akka {

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "INFO"


  priority-mailbox {
    mailbox-type = "akka.mailbox.PriorityMailbox"
  }
}

kamon {
  metric.filters {
    akka-actor {
      includes = ["**"]
      excludes = ["akka/beans/**", "akka/mailbox/**"]
    }

    akka-dispatcher {
      includes = ["**"]
      excludes = []
    }

    akka-router {
      includes = ["**"]
      excludes = []
    }

  }

  metric {
      tick-interval = 1 second
    }


 # ~~~~~~ StatsD configuration ~~~~~~~~~~~~~~~~~~~~~~~~

  statsd {
    # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
    # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
    hostname = "192.168.99.100"
    port = 8125

    # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
    # kamon.metrics.tick-interval setting.
    flush-interval = 1 second

    # Max packet size for UDP metrics data sent to StatsD.
    max-packet-size = 1024 bytes

    # Subscription patterns used to select which metrics will be pushed to StatsD. Note that first, metrics
    # collection for your desired entities must be activated under the kamon.metrics.filters settings.
    includes {
      actor       = [ "*" ]
      trace       = [ "*" ]
      dispatcher  = [ "*" ]
    }

    subscriptions {
      histogram = [ "**" ]
      min-max-counter = [ "**" ]
      gauge = [ "**" ]
      counter = [ "**" ]
      trace = [ "**" ]
      trace-segment = [ "**" ]
      akka-actor = [ "**" ]
      akka-dispatcher = [ "**" ]
      akka-router = [ "**" ]
      system-metric = [ "**" ]
    }

    simple-metric-key-generator {
      # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
      # this pattern:
      #    application.host.entity.entity-name.metric-name
      application = "myapp"
    }
  }


  }



